K Means clustering means that the data is divided into different clusters, and according to the clusters, two or more centroids(center point) are chosen. BAll the centroids are joined with each other, and a perpendicular line is drawn upon that joined line, and as we know that any point on the perpendicular line drawn is equidistant from both the centroids. Then as per the centroids, two or more categories are made. The points falling in the category 1 belong to category 1 and vice versa. But in the case, we change the centroid point, and do the same task, then we will notice that one or more points may change their existing or previous category, which should not be the case. Then we will keep on changing the centroid points till the time we receive a centroid point in which no point changed its category from the previous one. At that time, we would stop changing the centroid point, and that point will be final.
But, sometimes the K Means algorithm fails or may get us undesirable results, then at thet place K++ Algorithm come into the picture. This is used to avoid the trap. K Means alorithm can fail in the places such as mentioned in the screenshot 211. The initial result is better than the final result. So, if our K Means Clustering Model choses the second model, then our K Means Clustering Model would not give better results.
The moment at there will be maximum number of clusters and we will stop making clusters is when the number of clusters will become equal to the number of data points in our data set. At that point, the value for WCSS(Within-Cluster-Sum-of-Squares) will become 0 because in that case the number of pouints will also become equal to the number of centroids chosen, then both, the centroid and data point will overlap in such case leading WCSS = 0. There is a screenshot attached for the reference of WCSS.
The number of clusters required is found out using the Elbow Method.
WCSS is the sum of squared distance between each point and the centroid in a cluster. When we plot the WCSS with the K value, the plot looks like an Elbow. As the number of clusters increases, the WCSS value will start to decrease(therefore zero, in case of clusters equal to the number of points).